name: Build_immortalwrt-mt7981_ax3000m

on:
  repository_dispatch:
  workflow_dispatch:

  # 定时触发编译
  schedule:
    - cron: 00 00 * * *

# 点赞☆Star触发编译
#  watch:
#    types: [started]

jobs:
  Build_immortalwrt-mt7981_ax3000m_mod:
    runs-on: ubuntu-24.04
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo timedatectl set-timezone "Asia/Shanghai" 
          sudo -E swapoff -a
          sudo -E rm -f /swapfile
          sudo -E docker image prune -a -f
          sudo -E snap set system refresh.retain=2
          sudo -E apt-get -y purge dotnet* firefox ghc* google* llvm* mono* mysql* openjdk* php* zulu*
          sudo -E apt-get -y autoremove --purge
          sudo -E rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /etc/mysql /etc/php /usr/local/share/boost
          [ -n "$AGENT_TOOLSDIRECTORY" ] && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo -E apt-get update -y
          sudo -E apt full-upgrade -y
          sudo -E apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3-setuptools rsync swig unzip zlib1g-dev file wget
          sudo -E apt-get clean
          git config --global user.name 'GitHub Actions' && git config --global user.email 'waiquwang@gmail.com'
          df -h

      - name: Clone source code
        env:
          REPO_URL: https://github.com/hanwckf/immortalwrt-mt798x
          REPO_BRANCH: openwrt-21.02
        run: |
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
          cd openwrt

      - name: Update & Install feeds
        working-directory: ./openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Configuration Customization - Build_mt7981_ax3000m
        env:
          CONFIG_FILE: "openwrt/defconfig/mt7981-ax3000.config"
        run: |
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          cd openwrt && make defconfig

      - name: Upload defconfig
        uses: actions/upload-artifact@main
        with:
          name: mt7981-defconfig
          path: openwrt/.config
          include-hidden-files: true

      - name: Download package
        working-directory: ./openwrt
        run: |
          make download -j$(nproc) V=s
          find dl -size -1024c -exec ls -l {} \;
        # find dl -size -1024c -exec rm -f {} \;

      - name: Build firmware
        working-directory: ./openwrt
        run: |
          make -j$(nproc) V=s

      - name: Upload Packages
        uses: actions/upload-artifact@main
        with:
          name: AX3000M-Packages
          path: openwrt/bin/packages
          include-hidden-files: true

      - name: Upload firmware buildin Packages
        uses: actions/upload-artifact@main
        with:
          name: AX3000M-Buidin-Packages
          path: openwrt/bin/targets/mediatek/mt7981/packages
          include-hidden-files: true

      - name: calculate digest
        id: calculate_digest
        run: |
          echo "cleaning packages"
          rm -rfv ./openwrt/bin/targets/mediatek/mt7981/packages

          OUTDIR='./openwrt/bin/targets/mediatek/mt7981'
          getmd5(){
          md5sum=`md5sum $1`
          md5=`echo ${md5sum% *}`
          }
          getsha256(){
          sha256sum=`sha256sum $1`
          sha256=`echo ${sha256sum% *}`
          }

          echo "File name|MD5|SHA256" > filedigest.md
          echo ":---|:---|:---" >> filedigest.md
          for file in $(ls $OUTDIR);
          do
          getmd5 $OUTDIR/$file
          getsha256 $OUTDIR/$file
          echo $file"|"$md5"|"$sha256 >> filedigest.md
          done
          echo "wirte summary"
          cat ./filedigest.md >> $GITHUB_STEP_SUMMARY

      - name: Upload rax3000m nand Firmware
        uses: actions/upload-artifact@main
        with:
          name: rax3000m-nand-builds-$(date +%Y%m%d)
          path: openwrt/bin/targets/mediatek/mt7981/immortalwrt-mediatek-mt7981-cmcc_rax3000m-*
          include-hidden-files: true
          compression-level: 0

      - name: Upload Firmwares
        uses: actions/upload-artifact@main
        with:
          name: immortalwrt-mt7981-builds-$(date +%Y%m%d)
          path: openwrt/bin/targets/mediatek/mt7981/*
          include-hidden-files: true
          compression-level: 0

      - name: Save ccache
        id: ccache-save
        uses: actions/cache/save@v4
        with:
          path: |
            openwrt/.ccache
          key: ${{ runner.os }}-ccache

      - name: Generate Tag & Release Name
        id: generate_name
        run: |
          time=$(date +%Y%m%d%H%M%S)
          release_tag="$time"
          release_name="immortal-MT7981-AX3000M-$(date +%Y%m%d)"
          echo "release_name=$release_name" >> $GITHUB_OUTPUT
          echo "release_tag=$release_tag" >> $GITHUB_OUTPUT

      - name: Create Release & Upload
        uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: openwrt/bin/targets/mediatek/mt7981/*
          name: ${{ steps.generate_name.outputs.release_name }}
          tag: ${{ steps.generate_name.outputs.release_tag }}
          token: ${{ secrets.REPO_TOKEN }}
          bodyFile: ./filedigest.md
